<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_stub_entry="False">
      <reg_short_name>EDPRSR</reg_short_name>
        
        <reg_long_name>External Debug Processor Status Register</reg_long_name>

        <power_domain_text>When FEAT_DoPD is implemented, EDPRSR is in the Core power domain. Otherwise, EDPRSR contains fields that are in the Core power domain and fields that are in the Debug power domain</power_domain_text>


      
      

    
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x314</hexnumber></reg_offset>
    <reg_instance>EDPRSR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_DoPD is implemented and !IsCorePowered()</reg_access_level>
          <reg_access_type>ERROR</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Holds information about the reset and powerdown state of the PE.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Debug</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If <xref linkend="#FEAT_DoPD">FEAT_DoPD</xref> is implemented then all fields in this register are in the Core power domain.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>EDPRSR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_17" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>17</field_lsb>
    <rel_range>31:17</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-16_16-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EPMADE</field_name>
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>External Performance Monitors Access Disable Extended status. Together with EDPRSR.EPMAD, reports whether access to Performance Monitor registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{EPMAD, EPMADE} controls.</para>
    </field_description>
    <field_description order="after"><para>For a description of the values derived by evaluating EDPRSR.EPMAD and EDPRSR.EPMADE together, see EDPRSR.EPMAD.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented and FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-16_16-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>16</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-15_15-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ETADE</field_name>
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>External Trace Access Disable Extended status. Together with EDPRSR.ETAD, reports whether access to trace unit registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{ETAD, ETADE} controls.</para>
    </field_description>
    <field_description order="after"><para>For a description of the values derived by evaluating EDPRSR.ETAD and EDPRSR.ETADE together, see EDPRSR.ETAD.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented, FEAT_TRC_EXT is implemented, and FEAT_TRBE is implemented</fields_condition>
  </field>
  <field id="fieldset_0-15_15-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>15</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-14_14-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EDADE</field_name>
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>External Debug Access Disable Extended status. Together with EDPRSR.EDAD, reports whether access to breakpoint registers, watchpoint registers, and <register_link state="ext" id="ext-oslar_el1.xml">OSLAR_EL1</register_link> by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{EDAD, EDADE} controls.</para>
    </field_description>
    <field_description order="after"><para>For a description of the values derived by evaluating EDPRSR.EDAD and EDPRSR.EDADE together, see EDPRSR.EDAD.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-14_14-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>14</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-13_13-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>STAD</field_name>
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Sticky ETAD error. Set to 1 when a Non-secure external debug interface access to an external trace register returns an error because <function>AllowExternalTraceAccess()</function> == FALSE for the access.</para>
    </field_description>
    <field_description order="after"><para>If <function>IsCorePowered()</function> == TRUE, the Core power domain is powered up, then, following a read of EDPRSR, then this bit clears to 0.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Since EDPRSR was last read, no external accesses to the trace unit registers have failed because <function>AllowExternalTraceAccess()</function> was FALSE for the access.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Since EDPRSR was last read, at least one external access to the trace unit registers has failed because <function>AllowExternalTraceAccess()</function> was FALSE for the access.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RC/WI</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_TRC_EXT is implemented and FEAT_TRBE is implemented</fields_condition>
  </field>
  <field id="fieldset_0-13_13-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>13</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-12_12-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ETAD</field_name>
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>External Trace Access Disable status. Together with EDPRSR.ETADE, reports whether access to trace unit registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{ETAD, ETADE} controls.</para>
    </field_description>
    <field_description order="after"><table><tgroup cols="3"><thead><row><entry>ETADE</entry><entry>ETAD</entry><entry>Meaning</entry></row></thead><tbody><row><entry><binarynumber>0b0</binarynumber></entry><entry><binarynumber>0b0</binarynumber></entry><entry>No accesses from an external debugger to trace unit registers are prohibited.</entry></row><row><entry><binarynumber>0b0</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Realm and Non-secure accesses from an external debugger to trace unit registers are prohibited.
Other accesses from an external debugger to trace unit registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b0</binarynumber>
</entry><entry>Secure and Non-secure accesses from an external debugger to trace unit registers are prohibited.
Other accesses from an external debugger to trace unit registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Secure, Non-secure, and Realm accesses from an external debugger to trace unit registers are prohibited.
Other accesses from an external debugger to trace unit registers are not affected.</entry></row></tbody></tgroup></table>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented, FEAT_TRC_EXT is implemented, and FEAT_TRBE is implemented</fields_condition>
  </field>
  <field id="fieldset_0-12_12-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ETAD</field_name>
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>External Trace Access Disable status. Reports whether Non-secure access to trace unit registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.ETAD control.</para>
    </field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External Non-secure trace unit accesses not affected. <function>AllowExternalTraceAccess()</function> == TRUE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External Non-secure trace unit accesses are prohibited. <function>AllowExternalTraceAccess()</function> == FALSE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_TRC_EXT is implemented and FEAT_TRBE is implemented</fields_condition>
  </field>
  <field id="fieldset_0-12_12-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>12</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-11_11" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SDR</field_name>
    <field_msb>11</field_msb>
    <field_lsb>11</field_lsb>
    <rel_range>11</rel_range>
    <field_description order="before">
      <para>Sticky Debug Restart. Set to 1 when the PE exits Debug state.</para>
    </field_description>
    <field_description order="after"><note><para>If a reset occurs when the PE is in Debug state, the PE exits Debug state. SDR is <arm-defined-word>UNKNOWN</arm-defined-word> on Warm reset, meaning a debugger must also use the SR bit to determine whether the PE has left Debug state.</para></note><para>If the Core power domain is powered up, then following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The PE has not restarted since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The PE has restarted since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When SoftwareLockStatus()</field_access_level>
        <field_access_type>RO</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RC/WI</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-10_10-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SPMAD</field_name>
    <field_msb>10</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Sticky EPMAD error. Set to 1 if an external debug interface access to a Performance Monitors register returns an error because <function>AllowExternalPMUAccess()</function> == FALSE.</para>
    </field_description>
    <field_description order="after"><para>If the Core power domain is powered up, then following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE, this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No Non-secure external debug interface accesses to the external Performance Monitors registers have failed because <function>AllowExternalPMUAccess()</function> == FALSE for the access since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>At least one Non-secure external debug interface access to the external Performance Monitors register has failed and returned an error because <function>AllowExternalPMUAccess()</function> == FALSE for the access since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When SoftwareLockStatus()</field_access_level>
        <field_access_type>RO</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RC/WI</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p4 is implemented and FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-10_10-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SPMAD</field_name>
    <field_msb>10</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Sticky EPMAD error.</para>
    </field_description>
    <field_description order="after"><para>If the Core power domain is powered up, then, following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE, this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented, and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No external debug interface accesses to the Performance Monitors registers have failed because <function>AllowExternalPMUAccess()</function> == FALSE since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>At least one external debug interface access to the Performance Monitors registers has failed and returned an error because <function>AllowExternalPMUAccess()</function> == FALSE since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When OSLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When SoftwareLockStatus()</field_access_level>
        <field_access_type>RO</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RC/WI</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-10_10-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>10</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>10</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-9_9-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EPMAD</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Performance Monitors Access Disable status. Together with EDPRSR.EPMADE, reports whether access to Performance Monitor registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{EPMAD, EPMADE} controls.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EPMAD for the list of affected external Performance Monitor registers.</para></field_description>
    <field_description order="after"><table><tgroup cols="3"><thead><row><entry>EPMADE</entry><entry>EPMAD</entry><entry>Meaning</entry></row></thead><tbody><row><entry><binarynumber>0b0</binarynumber></entry><entry><binarynumber>0b0</binarynumber></entry><entry>No accesses from an external debugger to affected Performance Monitor registers are prohibited.</entry></row><row><entry><binarynumber>0b0</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Realm and Non-secure accesses from an external debugger to affected Performance Monitor registers are prohibited.
Other accesses from an external debugger to affected Performance Monitor registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b0</binarynumber>
</entry><entry>Secure and Non-secure accesses from an external debugger to affected Performance Monitor registers are prohibited.
Other accesses from an external debugger to affected Performance Monitor registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Secure, Non-secure, and Realm accesses from an external debugger to affected Performance Monitor registers are prohibited.
Other accesses from an external debugger to affected Performance Monitor registers are not affected.</entry></row></tbody></tgroup></table>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented and FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-9_9-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EPMAD</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Performance Monitors Access Disable status. Reports whether Non-secure access to Performance Monitor registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EPMAD control.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EPMAD for the list of affected external Performance Monitor registers.</para></field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External Non-secure access to Performance Monitor registers not affected. <function>AllowExternalPMUAccess()</function> == TRUE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External Non-secure access to affected Performance Monitor registers is prohibited. <function>AllowExternalPMUAccess()</function> == FALSE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p4 is implemented and FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-9_9-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EPMAD</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Performance Monitors Access Disable status. Reports whether access to Performance Monitor registers by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EPMAD control.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EPMAD for the list of affected external Performance Monitor registers.</para></field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External access to Performance Monitor registers not affected. <function>AllowExternalPMUAccess()</function> == TRUE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External access to affected Performance Monitor registers is prohibited. <function>AllowExternalPMUAccess()</function> == FALSE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When OSLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_PMUv3_EXT is implemented</fields_condition>
  </field>
  <field id="fieldset_0-9_9-4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="UNKNOWN" reserved_type="RES0">
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
    </field_description>
    <fields_condition>When FEAT_PMUv3 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-9_9-5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>9</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-8_8-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SDAD</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Sticky EDAD error. Set to 1 if an external debug interface access to a debug register returns an error because <function>AllowExternalDebugAccess()</function> == FALSE.</para>
    </field_description>
    <field_description order="after"><para>If the Core power domain is powered up, then, following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No Non-secure external debug interface accesses to the debug registers have failed because <function>AllowExternalDebugAccess()</function> == FALSE for the access since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>At least one Non-secure external debug interface access to the debug registers has failed and returned an error because <function>AllowExternalDebugAccess()</function> == FALSE for the access since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p4 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-8_8-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SDAD</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Sticky EDAD error. Set to 1 if an external debug interface access to a debug register returns an error because <function>AllowExternalDebugAccess()</function> == FALSE.</para>
    </field_description>
    <field_description order="after"><para>If the Core power domain is powered up, then, following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No external debug interface accesses to the debug registers have failed because <function>AllowExternalDebugAccess()</function> == FALSE since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>At least one external debug interface access to the debug registers has failed and returned an error because <function>AllowExternalDebugAccess()</function> == FALSE since EDPRSR was last read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>OSLockStatus()</field_access_sublevel>
          <field_access_sublevel>external debug writes to OSLAR_EL1 do not return an error when AllowExternalDebugAccess() == FALSE</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-7_7-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EDAD</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Debug Access Disable status. Together with EDPRSR.EDADE, reports whether access to breakpoint registers, watchpoint registers, and <register_link state="ext" id="ext-oslar_el1.xml">OSLAR_EL1</register_link> by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.{EDAD, EDADE} controls.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD for the list of affected external debug registers.</para></field_description>
    <field_description order="after"><table><tgroup cols="3"><thead><row><entry>EDADE</entry><entry>EDAD</entry><entry>Meaning</entry></row></thead><tbody><row><entry><binarynumber>0b0</binarynumber></entry><entry><binarynumber>0b0</binarynumber></entry><entry>No accesses from an external debugger to affected debug registers are prohibited.</entry></row><row><entry><binarynumber>0b0</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Realm and Non-secure accesses from an external debugger to affected debug registers are prohibited.
Other accesses from an external debugger to affected debug registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b0</binarynumber>
</entry><entry>Secure and Non-secure accesses from an external debugger to affected debug registers are prohibited.
Other accesses from an external debugger to affected debug registers are not affected.</entry></row><row><entry><binarynumber>0b1</binarynumber>
</entry><entry><binarynumber>0b1</binarynumber>
</entry><entry>Secure, Non-secure, and Realm accesses from an external debugger to affected debug registers are prohibited.
Other accesses from an external debugger to affected debug registers are not affected.</entry></row></tbody></tgroup></table>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-7_7-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EDAD</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Debug Access Disable status. Reports whether Non-secure access to breakpoint registers, watchpoint registers, and <register_link state="ext" id="ext-oslar_el1.xml">OSLAR_EL1</register_link> by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD control.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD for the list of affected external debug registers.</para></field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External Non-secure access to debug registers not affected. <function>AllowExternalDebugAccess()</function> == TRUE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External Non-secure access to affected debug registers is prohibited. <function>AllowExternalDebugAccess()</function> == FALSE for a Non-secure access.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p4 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-7_7-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EDAD</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Debug Access Disable status. Reports whether access to breakpoint registers, watchpoint registers, and <register_link state="ext" id="ext-oslar_el1.xml">OSLAR_EL1</register_link> by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD control.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD for the list of affected external debug registers.</para></field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External access to debug registers not affected. <function>AllowExternalDebugAccess()</function> == TRUE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External access to affected debug registers is prohibited. <function>AllowExternalDebugAccess()</function> == FALSE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>OSLockStatus()</field_access_sublevel>
          <field_access_sublevel>external debug writes to OSLAR_EL1 do not return an error when AllowExternalDebugAccess() == FALSE</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p2 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-7_7-4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EDAD</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>External Debug Access Disable status. Reports whether access to breakpoint registers, watchpoint registers, and optionally <register_link state="ext" id="ext-oslar_el1.xml">OSLAR_EL1</register_link> by an external debugger is prohibited by the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD control.</para>
<para>See <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EDAD for the list of affected external debug registers.</para></field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>External access to debug registers not affected. <function>AllowExternalDebugAccess()</function> == TRUE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>External access to affected debug registers is prohibited. <function>AllowExternalDebugAccess()</function> == FALSE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-6_6-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DLK</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>This field is <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>When FEAT_Debugv8p4 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-6_6-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DLK</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Double Lock. From Armv8.2, use of this field is deprecated.</para>
    </field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>DoubleLockStatus()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RAZ/WI</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p2 is implemented and FEAT_DoubleLock is implemented</fields_condition>
  </field>
  <field id="fieldset_0-6_6-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DLK</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>Double Lock.</para>
<para>This field returns the result of the pseudocode function <function>DoubleLockStatus()</function>.</para>
<para>If the Core power domain is powered up and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether:</para>
<list type="unordered">
<listitem><content>EDPRSR.PU reads as 1, EDPRSR.DLK reads as 1, and EDPRSR.SPD is <arm-defined-word>UNKNOWN</arm-defined-word>.</content>
</listitem><listitem><content>EDPRSR.PU reads as 0, EDPRSR.DLK is <arm-defined-word>UNKNOWN</arm-defined-word>, and EDPRSR.SPD reads as 0.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><function>DoubleLockStatus()</function> returns FALSE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><function>DoubleLockStatus()</function> returns TRUE and the Core power domain is powered up.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level>When !IsCorePowered()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_DoubleLock is implemented</fields_condition>
  </field>
  <field id="fieldset_0-6_6-4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>6</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-5_5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>OSLK</field_name>
    <field_msb>5</field_msb>
    <field_lsb>5</field_lsb>
    <rel_range>5</rel_range>
    <field_description order="before"><para>OS Lock status bit.</para>
<para>A read of this bit returns the value of <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>EDPRSR.R == 1</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-4_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HALTED</field_name>
    <field_msb>4</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>4</rel_range>
    <field_description order="before">
      <para>Halted status bit.</para>
    </field_description>
    <field_description order="after">
      <para>This field is in the Core power domain.</para>
    </field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>PE is in Non-debug state.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>PE is in Debug state.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-3_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SR</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>3</rel_range>
    <field_description order="before">
      <para>Sticky core Reset status bit.</para>
    </field_description>
    <field_description order="after"><para>If EDPRSR.PU reads as 1 and EDPRSR.R reads as 0, which means that the Core power domain is in a powerup state and that the non-debug logic of the PE is not in reset state, then following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The non-debug logic of the PE is not in reset state and has not been reset since the last time EDPRSR was read.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The non-debug logic of the PE is in reset state or has been reset since the last time EDPRSR was read.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>'1'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When DoubleLockStatus()</field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level>When SoftwareLockStatus()</field_access_level>
        <field_access_type>RO</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RC/WI</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>R</field_name>
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>PE Reset status bit.</para>
    </field_description>
    <field_description order="after"><para>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented, the PE is in reset state, and the PE entered reset state with the OS Double Lock locked this bit has a <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> value. For more information, see <xref linkend="#BABEBAFB">'EDPRSR.{DLK, R} and reset state'</xref>.</para>
<para>This field is in the Core power domain.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The non-debug logic of the PE is not in reset state.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The non-debug logic of the PE is in reset state.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_level operand="OR">
          <field_access_sublevel>FEAT_DoPD is not implemented and !IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>DoubleLockStatus()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-1_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SPD</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>1</rel_range>
    <field_description order="before"><para>Sticky core Powerdown status bit.</para>
<para>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, then:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_Debugv8p2">FEAT_Debugv8p2</xref> is implemented, this bit reads as 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_Debugv8p2">FEAT_Debugv8p2</xref> is not implemented, this bit might read as 0 or 1.</content>
</listitem></list>
<para>For more information, see <xref linkend="#BABFCFCG">'EDPRSR.{DLK, SPD, PU} and the Core power domain'</xref>.</para></field_description>
    <field_description order="after"><para>If the Core power domain is powered up, then, following a read of EDPRSR:</para>
<list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE this bit clears to 0.</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether this bit clears to 0 or is unchanged.</content>
</listitem></list>
<para>EDPRSR.{DLK, SPD, PU} describe whether registers in the Core power domain can be accessed, and whether their state has been lost since the last time the register was read. For more information, see <xref linkend="#BABFCFCG">'EDPRSR.{DLK, SPD, PU} and the Core power domain'</xref>.</para>
<para>When <xref linkend="#FEAT_DoPD">FEAT_DoPD</xref> is not implemented and the Core power domain is in either retention or powerdown state, the value of EDPRSR.SPD is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>. For more information, see <xref linkend="#BABHEJCI">'EDPRSR.SPD when the Core domain is in either retention or powerdown state'</xref>.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>If EDPRSR.PU is 0, it is not known whether the state of the debug registers in the Core power domain is lost.</para>
<para>If EDPRSR.PU is 1, the state of the debug registers in the Core power domain has not been lost.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The state of the debug registers in the Core power domain has been lost.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>'1'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>FEAT_DoPD is not implemented</field_access_sublevel>
          <field_access_sublevel>!IsCorePowered()</field_access_sublevel>
        </field_access_level>
        <field_access_type>RAZ/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_level operand="AND">
          <field_access_sublevel>IsCorePowered()</field_access_sublevel>
          <field_access_sublevel>DoubleLockStatus()</field_access_sublevel>
        </field_access_level>
        <field_access_type>UNKNOWN/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-0_0-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>PU</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Core powerup status bit.</para>
    </field_description>
    <field_access>
      <field_access_state>
        <field_access_type>RAO/WI</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_DoPD is implemented</fields_condition>
  </field>
  <field id="fieldset_0-0_0-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>PU</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Core Powerup status bit. Indicates whether the debug registers in the Core power domain can be accessed.</para>
    </field_description>
    <field_description order="after"><para>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented, the PE is in reset state, and the PE entered reset state with the OS Double Lock locked this bit has a <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> value. For more information, see <xref linkend="#BABEBAFB">'EDPRSR.{DLK, R} and reset state'</xref></para>
<para>EDPRSR.{DLK, SPD, PU} describe whether registers in the Core power domain can be accessed, and whether their state has been lost since the last time the register was read. For more information, see <xref linkend="#BABFCFCG">'EDPRSR.{DLK, SPD, PU} and the Core power domain'</xref></para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Either the Core power domain is in a low-power or powerdown state, or <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, meaning the debug registers in the Core power domain cannot be accessed.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The Core power domain is in a powerup state, and either <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE, meaning the debug registers in the Core power domain can be accessed.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>When FEAT_Debugv8p2 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-0_0-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>PU</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Core Powerup status bit. Indicates whether the debug registers in the Core power domain can be accessed.</para>
    </field_description>
    <field_description order="after"><para>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented, the PE is in reset state, and the PE entered reset state with the OS Double Lock locked this bit has a <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> value. For more information see <xref linkend="#BABEBAFB">'EDPRSR.{DLK, R} and reset state'</xref></para>
<para>EDPRSR.{DLK, SPD, PU} describe whether registers in the Core power domain can be accessed, and whether their state has been lost since the last time the register was read. For more information, see <xref linkend="#BABFCFCG">'EDPRSR.{DLK, SPD, PU} and the Core power domain'</xref>.</para>
<para>When the Core power domain is powered-up and <function>DoubleLockStatus()</function> == TRUE, then the value of EDPRSR.PU is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>. See the description of the DLK bit for more information.</para>
<para>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented, the Core power domain is powered up, and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this bit reads as 0 or 1.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Core power domain is in a low-power or powerdown state where the debug registers in the Core power domain cannot be accessed.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Core power domain is in a powerup state where the debug registers in the Core power domain can be accessed.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_17" msb="31" lsb="17"/>
  <fieldat id="fieldset_0-16_16-1" msb="16" lsb="16"/>
  <fieldat id="fieldset_0-15_15-1" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-14_14-1" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-13_13-1" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-12_12-1" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-11_11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-10_10-1" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-9_9-1" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-8_8-1" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-7_7-1" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-6_6-1" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-5_5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-4_4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-3_3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-1_1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-0_0-1" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>On permitted accesses to the register, other access controls affect the behavior of some fields. See the field descriptions for more information.</para>

      </access_permission_text>
      <access_permission_text>
        <para>If the Core power domain is powered up (EDPRSR.PU == 1), then following a read of EDPRSR:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is not implemented or <function>DoubleLockStatus()</function> == FALSE, then:<list type="unordered">
<listitem><content>EDPRSR.{SDR, SPMAD, SDAD, SPD} are cleared to 0.</content>
</listitem><listitem><content>EDPRSR.SR is cleared to 0 if the non-debug logic of the PE is not in reset state (EDPRSR.R == 0).</content>
</listitem></list>
</content>
</listitem><listitem><content>If <xref linkend="#FEAT_DoubleLock">FEAT_DoubleLock</xref> is implemented and <function>DoubleLockStatus()</function> == TRUE, it is <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> whether or not this clearing occurs.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>If <xref linkend="#FEAT_DoPD">FEAT_DoPD</xref> is not implemented and the Core power domain is powered down (EDPRSR.PU == 0), then:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>EDPRSR.{SDR, SPMAD, SDAD, SR} are all <arm-defined-word>UNKNOWN</arm-defined-word>, and are either reset or restored on being powered up.</content>
</listitem><listitem><content>EDPRSR.SPD is not cleared following a read of EDPRSR. See the SPD bit description for more information.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>The clearing of bits is an indirect write to EDPRSR.</para>
      </access_permission_text>





    

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:53; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>