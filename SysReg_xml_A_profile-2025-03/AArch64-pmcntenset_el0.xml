<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch64" is_register="True" is_internal="True" is_stub_entry="False">
      <reg_short_name>PMCNTENSET_EL0</reg_short_name>
        
        <reg_long_name>Performance Monitors Count Enable Set Register</reg_long_name>



      
            <reg_condition otherwise="UNDEFINED">when FEAT_PMUv3 is implemented and FEAT_AA64 is implemented</reg_condition>
      




          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        



    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="AArch32-pmcntenset.xml">PMCNTENSET</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch32</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>
    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="pmu.pmcntenset_el0.xml">PMCNTENSET_EL0</mapped_name>
  <mapped_type>Architectural</mapped_type>
    <mapped_execution_state>External</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>
    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="pmu.pmcntenset_el0.xml">PMCNTENSET_EL0</mapped_name>
  <mapped_type>Architectural</mapped_type>
    <mapped_execution_state>External</mapped_execution_state>
    <mapped_from_startbit>63</mapped_from_startbit>
    <mapped_from_endbit>32</mapped_from_endbit>
    <mapped_to_startbit>63</mapped_to_startbit>
    <mapped_to_endbit>32</mapped_to_endbit>
    <mapped_from_rangeset output="63:32">
      <range>
        <msb>63</msb>
        <lsb>32</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="63:32">
      <range>
        <msb>63</msb>
        <lsb>32</lsb>
      </range>
    </mapped_to_rangeset>

        <mapped_to_condition>when FEAT_PMUv3p9 is implemented or FEAT_PMUv3_EXT64 is implemented</mapped_to_condition>
      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Allows software to enable the following counters:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>The cycle counter <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link>.</content>
</listitem><listitem><content>The event counters <register_link state="AArch64" id="AArch64-pmevcntrn_el0.xml">PMEVCNTR&lt;n&gt;_EL0</register_link>.</content>
</listitem><listitem><content>When <xref linkend="#FEAT_PMUv3_ICNTR">FEAT_PMUv3_ICNTR</xref> is implemented, the instruction counter <register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link>.</content>
</listitem></list>

      </purpose_text>
      <purpose_text>
        <para>Reading from this register shows which counters are enabled.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>PMU</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>PMCNTENSET_EL0 is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="64">
  <text_before_fields/>
  <field id="fieldset_0-63_33" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>33</field_lsb>
    <rel_range>63:33</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-32_32-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>F0</field_name>
    <field_msb>32</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para><register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link> enable. On writes, allows software to enable <register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link>. On reads, returns the <register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link> enable status.</para>
    </field_description>
    <field_description order="after"><para>Accessing this field has the following behavior:</para>
<list type="unordered">
<listitem><content>This field reads-as-zero if all of the following are true:<list type="unordered">
<listitem><content>Any of the following are true:<list type="unordered">
<listitem><content>EL3 is implemented and <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn2 == 0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-hdfgrtr2_el2.xml">HDFGRTR2_EL2</register_link>.nPMICFILTR_EL0 == 0.</content>
</listitem></list>
</content>
</listitem><listitem><content><xref linkend="#FEAT_FGT2">FEAT_FGT2</xref> is implemented.</content>
</listitem><listitem><content>EL2 is implemented and enabled in the current Security state.</content>
</listitem><listitem><content>Accessed at EL1 or EL0.</content>
</listitem><listitem><content>The Effective value of <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is not {1, 1}.</content>
</listitem></list>
</content>
</listitem><listitem><content>Permitted reads and writes of this field are RAZ/WI if any of the following are true:<list type="unordered">
<listitem><content>All of the following are true:<list type="unordered">
<listitem><content>EL3 is implemented.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.EnPM2 == 0.</content>
</listitem><listitem><content>Accessed at EL2, EL1, and EL0.</content>
</listitem></list>
</content>
</listitem><listitem><content>All of the following are true:<list type="unordered">
<listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.UEN == 0 or <register_link state="AArch64" id="AArch64-pmuacr_el1.xml">PMUACR_EL1</register_link>.F0 == 0.</content>
</listitem><listitem><content>Accessed at EL0.</content>
</listitem></list>
</content>
</listitem></list>
</content>
</listitem><listitem><content>Permitted writes of this field are ignored if any of the following are true:<list type="unordered">
<listitem><content>All of the following are true:<list type="unordered">
<listitem><content>EL3 is implemented and <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.FGTEn2 == 0, or <register_link state="AArch64" id="AArch64-hdfgwtr2_el2.xml">HDFGWTR2_EL2</register_link>.nPMICFILTR_EL0 == 0.</content>
</listitem><listitem><content><xref linkend="#FEAT_FGT2">FEAT_FGT2</xref> is implemented.</content>
</listitem><listitem><content>EL2 is implemented and enabled in the current Security state.</content>
</listitem><listitem><content>Accessed at EL1 or EL0.</content>
</listitem><listitem><content>The Effective value of <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is not {1, 1}.</content>
</listitem></list>
</content>
</listitem><listitem><content>All of the following are true:<list type="unordered">
<listitem><content>Accessed at EL0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.IR == 1.</content>
</listitem></list>
</content>
</listitem></list>
</content>
</listitem><listitem><content>Otherwise access to this field is W1S.</content>
</listitem></list></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link> disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-pmicntr_el0.xml">PMICNTR_EL0</register_link> enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_PMUv3_ICNTR is implemented</fields_condition>
  </field>
  <field id="fieldset_0-32_32-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>32</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>32</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>C</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before">
      <para><register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> enable. On writes, allows software to enable <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link>. On reads, returns the <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> enable status.</para>
    </field_description>
    <field_description order="after"><para>Accessing this field has the following behavior:</para>
<list type="unordered">
<listitem><content>Permitted reads and writes of this field are RAZ/WI if all of the following are true:<list type="unordered">
<listitem><content><xref linkend="#FEAT_PMUv3p9">FEAT_PMUv3p9</xref> is implemented.</content>
</listitem><listitem><content>Accessed at EL0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.UEN == 1.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuacr_el1.xml">PMUACR_EL1</register_link>.C == 0.</content>
</listitem></list>
</content>
</listitem><listitem><content>Permitted writes of this field are ignored if all of the following are true:<list type="unordered">
<listitem><content><xref linkend="#FEAT_PMUv3p9">FEAT_PMUv3p9</xref> is implemented.</content>
</listitem><listitem><content>Accessed at EL0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.{UEN,CR} == {1,1}.</content>
</listitem></list>
</content>
</listitem></list></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_conditions>
          <field_reset_condition condition="FEAT_PMUv3_EXTPMN is implemented">
            <field_reset>
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_reset_condition>
        </field_reset_conditions>
      </field_reset>
      <field_reset reset_type="Warm">
        <field_reset_conditions>
          <field_reset_condition condition="FEAT_PMUv3_EXTPMN is not implemented">
            <field_reset>
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_reset_condition>
        </field_reset_conditions>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-30_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>P&lt;m&gt;</field_name>
    <field_msb>30</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>30:0</rel_range>
    <field_description order="before">
      <para><register_link id="AArch64-pmevcntrn_el0.xml" state="AArch64">PMEVCNTR&lt;m&gt;_EL0</register_link> enable. On writes, allows software to enable <register_link id="AArch64-pmevcntrn_el0.xml" state="AArch64">PMEVCNTR&lt;m&gt;_EL0</register_link>. On reads, returns the <register_link id="AArch64-pmevcntrn_el0.xml" state="AArch64">PMEVCNTR&lt;m&gt;_EL0</register_link> enable status.</para>
    </field_description>
    <field_description order="after"><para>Accessing this field has the following behavior:</para>
<list type="unordered">
<listitem><content>Permitted reads and writes of this field are RAZ/WI if any of the following are true:<list type="unordered">
<listitem><content>All of the following are true:<list type="unordered">
<listitem><content><xref linkend="#FEAT_PMUv3p9">FEAT_PMUv3p9</xref> is implemented.</content>
</listitem><listitem><content>Accessed at EL0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.UEN == 1.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuacr_el1.xml">PMUACR_EL1</register_link>.P&lt;m&gt; == 0.</content>
</listitem></list>
</content>
</listitem><listitem><content>m &gt;= GetNumEventCountersAccessible().</content>
</listitem></list>
</content>
</listitem><listitem><content>Permitted writes of this field are ignored if all of the following are true:<list type="unordered">
<listitem><content><xref linkend="#FEAT_PMUv3p9">FEAT_PMUv3p9</xref> is implemented.</content>
</listitem><listitem><content>Accessed at EL0.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-pmuserenr_el0.xml">PMUSERENR_EL0</register_link>.{UEN,ER} == {1,1}.</content>
</listitem></list>
</content>
</listitem><listitem><content>Otherwise access to this field is W1S.</content>
</listitem></list></field_description>
    <field_array_indexes index_variable="m" element_size="1" range_specifier="m">
      <field_array_index>
        <field_array_start>30</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link id="AArch64-pmevcntrn_el0.xml" state="AArch64">PMEVCNTR&lt;m&gt;_EL0</register_link> disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link id="AArch64-pmevcntrn_el0.xml" state="AArch64">PMEVCNTR&lt;m&gt;_EL0</register_link> enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_conditions>
          <field_reset_condition condition="FEAT_PMUv3_EXTPMN is implemented">
            <field_reset>
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_reset_condition>
        </field_reset_conditions>
      </field_reset>
      <field_reset reset_type="Warm">
        <field_reset_conditions>
          <field_reset_condition condition="FEAT_PMUv3_EXTPMN is not implemented">
            <field_reset>
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_reset_condition>
        </field_reset_conditions>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_33" msb="63" lsb="33"/>
  <fieldat id="fieldset_0-32_32-1" msb="32" lsb="32"/>
  <fieldat id="fieldset_0-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_0" label="P30" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-30_0" label="P29" msb="29" lsb="29"/>
  <fieldat id="fieldset_0-30_0" label="P28" msb="28" lsb="28"/>
  <fieldat id="fieldset_0-30_0" label="P27" msb="27" lsb="27"/>
  <fieldat id="fieldset_0-30_0" label="P26" msb="26" lsb="26"/>
  <fieldat id="fieldset_0-30_0" label="P25" msb="25" lsb="25"/>
  <fieldat id="fieldset_0-30_0" label="P24" msb="24" lsb="24"/>
  <fieldat id="fieldset_0-30_0" label="P23" msb="23" lsb="23"/>
  <fieldat id="fieldset_0-30_0" label="P22" msb="22" lsb="22"/>
  <fieldat id="fieldset_0-30_0" label="P21" msb="21" lsb="21"/>
  <fieldat id="fieldset_0-30_0" label="P20" msb="20" lsb="20"/>
  <fieldat id="fieldset_0-30_0" label="P19" msb="19" lsb="19"/>
  <fieldat id="fieldset_0-30_0" label="P18" msb="18" lsb="18"/>
  <fieldat id="fieldset_0-30_0" label="P17" msb="17" lsb="17"/>
  <fieldat id="fieldset_0-30_0" label="P16" msb="16" lsb="16"/>
  <fieldat id="fieldset_0-30_0" label="P15" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-30_0" label="P14" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-30_0" label="P13" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-30_0" label="P12" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-30_0" label="P11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-30_0" label="P10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-30_0" label="P9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-30_0" label="P8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-30_0" label="P7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-30_0" label="P6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-30_0" label="P5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-30_0" label="P4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-30_0" label="P3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-30_0" label="P2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-30_0" label="P1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-30_0" label="P0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






    
        
        <access_mechanism accessor="MRS PMCNTENSET_EL0" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, PMCNTENSET_EL0</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b011"/>
                
                <enc n="CRn" v="0b1001"/>
                
                <enc n="CRm" v="0b1100"/>
                
                <enc n="op2" v="0b001"/>
            </encoding>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if !(IsFeatureImplemented(FEAT_PMUv3) &amp;&amp; IsFeatureImplemented(FEAT_AA64)) then
    UNDEFINED;
elsif PSTATE.EL == EL0 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif PMUSERENR_EL0.EN == '0' &amp;&amp; (!IsFeatureImplemented(FEAT_PMUv3p9) || PMUSERENR_EL0.UEN == '0') then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    elsif EL2Enabled() &amp;&amp; !ELIsInHost(EL0) &amp;&amp; IsFeatureImplemented(FEAT_FGT) &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGRTR_EL2.PMCNTEN == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPM == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        X[t, 64] = PMCNTENSET_EL0;
elsif PSTATE.EL == EL1 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; IsFeatureImplemented(FEAT_FGT) &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGRTR_EL2.PMCNTEN == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPM == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        X[t, 64] = PMCNTENSET_EL0;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        X[t, 64] = PMCNTENSET_EL0;
elsif PSTATE.EL == EL3 then
    X[t, 64] = PMCNTENSET_EL0;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
    
        
        <access_mechanism accessor="MSRregister PMCNTENSET_EL0" type="SystemAccessor">
            <encoding>
            <access_instruction>MSR PMCNTENSET_EL0, &lt;Xt&gt;</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b011"/>
                
                <enc n="CRn" v="0b1001"/>
                
                <enc n="CRm" v="0b1100"/>
                
                <enc n="op2" v="0b001"/>
            </encoding>
            <access_permission>
                <ps name="MSRregister" sections="1" secttype="access_permission">
                <pstext>
if !(IsFeatureImplemented(FEAT_PMUv3) &amp;&amp; IsFeatureImplemented(FEAT_AA64)) then
    UNDEFINED;
elsif PSTATE.EL == EL0 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif PMUSERENR_EL0.EN == '0' &amp;&amp; (!IsFeatureImplemented(FEAT_PMUv3p9) || PMUSERENR_EL0.UEN == '0') then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    elsif EL2Enabled() &amp;&amp; !ELIsInHost(EL0) &amp;&amp; IsFeatureImplemented(FEAT_FGT) &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGWTR_EL2.PMCNTEN == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPM == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        PMCNTENSET_EL0 = X[t, 64];
elsif PSTATE.EL == EL1 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif EL2Enabled() &amp;&amp; IsFeatureImplemented(FEAT_FGT) &amp;&amp; (!HaveEL(EL3) || SCR_EL3.FGTEn == '1') &amp;&amp; HDFGWTR_EL2.PMCNTEN == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif EL2Enabled() &amp;&amp; MDCR_EL2.TPM == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        PMCNTENSET_EL0 = X[t, 64];
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; EL3SDDUndefPriority() &amp;&amp; MDCR_EL3.TPM == '1' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; MDCR_EL3.TPM == '1' then
        if EL3SDDUndef() then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x18);
    else
        PMCNTENSET_EL0 = X[t, 64];
elsif PSTATE.EL == EL3 then
    PMCNTENSET_EL0 = X[t, 64];
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:52; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>