<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_stub_entry="False">
      <reg_short_name>EDDEVID1</reg_short_name>
        
        <reg_long_name>External Debug Device ID Register 1</reg_long_name>

        <power_domain_text>When FEAT_DoPD is implemented, EDDEVID1 is in the Core power domain. Otherwise, EDDEVID1 is in the Debug power domain</power_domain_text>


      
      

    
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0xFC4</hexnumber></reg_offset>
    <reg_instance>EDDEVID1</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_DoPD is implemented and !IsCorePowered()</reg_access_level>
          <reg_access_type>ERROR</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Provides extra information for external debuggers about features of the debug implementation.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Debug</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>EDDEVID1 is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>31:8</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-7_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HSR</field_name>
    <field_msb>7</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>7:4</rel_range>
    <field_description order="before">
      <para>Indicates support for the External Debug Halt Status Register, <register_link state="ext" id="ext-edhsr.xml">EDHSR</register_link>.</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>FEAT_EDHSR implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para><xref linkend="#FEAT_Debugv8p9">FEAT_Debugv8p9</xref> implements the functionality identified by the value <binarynumber>0b0010</binarynumber>.</para>
<para>When <xref linkend="#FEAT_Debugv8p2">FEAT_Debugv8p2</xref> is not implemented, the only permitted value is <binarynumber>0b0000</binarynumber>.</para>
<para>From Armv8.9, the values <binarynumber>0b0000</binarynumber> and <binarynumber>0b0001</binarynumber> are not permitted.</para></field_description>
    <field_values impdef="True">
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-edhsr.xml">EDHSR</register_link> not implemented, and the PE follows behaviors consistent with all of the <register_link state="ext" id="ext-edhsr.xml">EDHSR</register_link> fields having a zero value.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-edhsr.xml">EDHSR</register_link> implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>As <binarynumber>0b0001</binarynumber>, but extends <register_link state="ext" id="ext-edhsr.xml">EDHSR</register_link> to include the VNCR, CM, and WnR fields.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-3_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PCSROffset</field_name>
    <field_msb>3</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Indicates the offset applied to PC samples returned by reads of <register_link state="ext" id="ext-edpcsr.xml">EDPCSR</register_link>.</para>
    </field_description>
    <field_description order="after"><para>When <xref linkend="#FEAT_PCSRv8p2">FEAT_PCSRv8p2</xref> is implemented, the only permitted value is <binarynumber>0b0000</binarynumber>.</para>
<note><para><xref linkend="#FEAT_PCSRv8p2">FEAT_PCSRv8p2</xref> implements the PC Sample-based Profiling Extension in the Performance Monitors register space, as indicated by the value of <register_link id="pmu.pmdevid.xml" state="">PMDEVID</register_link>.PCSample.</para></note></field_description>
    <field_values impdef="True">
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-edpcsr.xml">EDPCSR</register_link> not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-edpcsr.xml">EDPCSR</register_link> implemented, and samples have no offset applied and do not sample the instruction set state in AArch32 state.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_8" msb="31" lsb="8"/>
  <fieldat id="fieldset_0-7_4" msb="7" lsb="4"/>
  <fieldat id="fieldset_0-3_0" msb="3" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






    

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:53; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>