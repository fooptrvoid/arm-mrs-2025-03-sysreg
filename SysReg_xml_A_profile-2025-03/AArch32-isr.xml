<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch32" is_register="True" is_internal="True" is_stub_entry="False">
      <reg_short_name>ISR</reg_short_name>
        
        <reg_long_name>Interrupt Status Register</reg_long_name>



      
            <reg_condition otherwise="UNDEFINED">when FEAT_AA32EL1 is implemented</reg_condition>
      




          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        



    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="AArch64-isr_el1.xml">ISR_EL1</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch64</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Shows the pending status of the IRQ and FIQ interrupts and the SError exceptions.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>Exception</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ISR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_9" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>31:9</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-8_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>A</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>8</rel_range>
    <field_description order="before">
      <para>SError exception pending bit:</para>
    </field_description>
    <field_description order="after"><para>If all of the following apply then this field shows the pending status of virtual SError exceptions:</para>
<list type="unordered">
<listitem><content>EL2 is implemented and enabled in the current Security state.</content>
</listitem><listitem><content>Any of the following apply:<list type="unordered">
<listitem><content>EL2 is using AArch64 and <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.AMO is 1.</content>
</listitem><listitem><content>EL2 is using AArch64, <xref linkend="#FEAT_DoubleFault2">FEAT_DoubleFault2</xref> is implemented, and the Effective value of <register_link state="AArch64" id="AArch64-hcrx_el2.xml">HCRX_EL2</register_link>.TMEA is 1.</content>
</listitem><listitem><content>EL2 is using AArch32 and <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.AMO is 1.</content>
</listitem></list>
</content>
</listitem><listitem><content>The PE is executing at EL1.</content>
</listitem></list>
<para>Otherwise, this field shows the pending status of physical SError exceptions.</para>
<para>If the SError exception is edge-triggered, this field is cleared to zero when the physical SError exception is taken.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No pending SError exception.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>An SError exception is pending.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-7_7" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>I</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>7</rel_range>
    <field_description order="before">
      <para>IRQ pending bit. Indicates whether an IRQ interrupt is pending:</para>
    </field_description>
    <field_description order="after"><para>If all of the following apply then this field shows the pending status of virtual IRQ interrupts:</para>
<list type="unordered">
<listitem><content>EL2 is implemented and enabled in the current Security state.</content>
</listitem><listitem><content>Any of the following apply:<list type="unordered">
<listitem><content>EL2 is using AArch64 and <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.IMO is 1.</content>
</listitem><listitem><content>EL2 is using AArch32 and <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.IMO is 1.</content>
</listitem></list>
</content>
</listitem><listitem><content>The PE is executing at EL1.</content>
</listitem></list>
<para>Otherwise, this field shows the pending status of physical IRQ interrupts.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No pending IRQ.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>An IRQ interrupt is pending.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-6_6" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>F</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>6</rel_range>
    <field_description order="before">
      <para>FIQ pending bit. Indicates whether an FIQ interrupt is pending.</para>
    </field_description>
    <field_description order="after"><para>If all of the following apply then this field shows the pending status of virtual FIQ interrupts:</para>
<list type="unordered">
<listitem><content>EL2 is implemented and enabled in the current Security state.</content>
</listitem><listitem><content>Any of the following apply:<list type="unordered">
<listitem><content>EL2 is using AArch64 and <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.FMO is 1.</content>
</listitem><listitem><content>EL2 is using AArch32 and <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.FMO is 1.</content>
</listitem></list>
</content>
</listitem><listitem><content>The PE is executing at EL1.</content>
</listitem></list>
<para>Otherwise, this field shows the pending status of physical FIQ interrupts.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>No pending FIQ.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>An FIQ interrupt is pending.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-5_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>5</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>5:0</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_9" msb="31" lsb="9"/>
  <fieldat id="fieldset_0-8_8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-7_7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-6_6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-5_0" msb="5" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






    
        
        <access_mechanism accessor="MRC ISR" type="SystemAccessor">
            <encoding>
            <access_instruction>MRC{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
                
                <enc n="coproc" v="0b1111"/>
                
                <enc n="opc1" v="0b000"/>
                
                <enc n="CRn" v="0b1100"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="opc2" v="0b000"/>
            </encoding>
            <access_permission>
                <ps name="MRC" sections="1" secttype="access_permission">
                <pstext>
if !IsFeatureImplemented(FEAT_AA32EL1) then
    UNDEFINED;
elsif PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; IsFeatureImplemented(FEAT_AA64EL2) &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T12 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; IsFeatureImplemented(FEAT_AA32EL2) &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T12 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        R[t] = ISR;
elsif PSTATE.EL == EL2 then
    R[t] = ISR;
elsif PSTATE.EL == EL3 then
    R[t] = ISR;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:52; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>