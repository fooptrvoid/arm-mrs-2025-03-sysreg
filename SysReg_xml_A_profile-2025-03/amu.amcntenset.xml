<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_stub_entry="False">
      <reg_short_name>AMCNTENSET</reg_short_name>
        
        <reg_long_name>Activity Monitors Count Enable Set Register</reg_long_name>

        <power_domain_text>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether AMCNTENSET is implemented in the Core power domain or in the Debug power domain</power_domain_text>

        <reg_parent_link id="amu.xml">AMU</reg_parent_link>

      
            <reg_condition otherwise="RES0">when FEAT_AMUv1 is implemented and FEAT_AMU_EXT64 is implemented</reg_condition>
      



    
    <reg_address
        external_access="False"
        mem_map_access="False"
        block_access="True"
        memory_access="True"
        table_id="AMUacccessor0"
    >
  
  <reg_frame>AMU</reg_frame>
  
    
    <reg_offset><hexnumber>0xC00</hexnumber></reg_offset>
    <reg_access>
    
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented, FEAT_AMU_EXTACR is implemented, an access is Secure, and AMROOTCR.RA IN {0b01, 0b00}</reg_access_level>
          <reg_access_type>RAZ/WI</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented, FEAT_AMU_EXTACR is implemented, an access is Realm, and AMROOTCR.RA IN {0b10, 0b00}</reg_access_level>
          <reg_access_type>RAZ/WI</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented, FEAT_AMU_EXTACR is implemented, an access is Non-secure, and AMROOTCR.RA != 0b11</reg_access_level>
          <reg_access_type>RAZ/WI</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is not implemented, FEAT_AMU_EXTACR is implemented, an access is Non-secure, and AMSCR.NSRA == 0</reg_access_level>
          <reg_access_type>RAZ/WI</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>


          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        



    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="AArch64-amcntenset0_el0.xml">AMCNTENSET0_EL0</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch64</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>
    
      
      <reg_mapping>
        
  

    

  

    <mapped_name filename="AArch64-amcntenset1_el0.xml">AMCNTENSET1_EL0</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch64</mapped_execution_state>
    <mapped_from_startbit>63</mapped_from_startbit>
    <mapped_from_endbit>32</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="63:32">
      <range>
        <msb>63</msb>
        <lsb>32</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Enable control bits for the architected and auxiliary activity monitors event counters, <register_link id="amu.amevcntr0n.xml" state="">AMEVCNTR0&lt;n&gt;</register_link> and <register_link id="amu.amevcntr1n.xml" state="">AMEVCNTR1&lt;n&gt;</register_link>.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>AMU</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>AMCNTENSET is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="64">
  <text_before_fields/>
  <field id="fieldset_0-63_48" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>63:48</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-47_32" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>P1&lt;n&gt;</field_name>
    <field_msb>47</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>47:32</rel_range>
    <field_description order="before"><para>Activity monitor event counter enable bit for <register_link id="amu.amevcntr1n.xml" state="">AMEVCNTR1&lt;n&gt;</register_link>.</para>
<para>Possible values of each bit are:</para></field_description>
    <field_array_indexes index_variable="n" element_size="1" range_specifier="n+32">
      <field_array_index>
        <field_array_start>15</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>When read, means that <register_link id="amu.amevcntr1n.xml" state="">AMEVCNTR1&lt;n&gt;</register_link> is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>When read, means that <register_link id="amu.amevcntr1n.xml" state="">AMEVCNTR1&lt;n&gt;</register_link> is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="AMU">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level>When n &gt;= UInt(AMU.AMCGCR.CG1NC)</field_access_level>
        <field_access_type>RAZ/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>W1S</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-31_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>31:16</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-15_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RAZ/WI">
    <field_msb>15</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>15:4</rel_range>
    <field_description order="before"/>
    <field_description order="before">
      <para>Reserved, RAZ/WI.</para>
    </field_description>
    <field_description order="after">
      <para>This field is reserved for additional architected activity monitor event counters, which Arm might define in a future version of the Activity Monitors architecture.</para>
    </field_description>
  </field>
  <field id="fieldset_0-3_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>P0&lt;n&gt;</field_name>
    <field_msb>3</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before"><para>Activity monitor event counter enable bit for <register_link id="amu.amevcntr0n.xml" state="">AMEVCNTR0&lt;n&gt;</register_link>.</para>
<note><para><register_link id="amu.amcgcr.xml" state="">AMCGCR</register_link>.CG0NC identifies the number of architected activity monitor event counters. In an implementation that includes <xref filename="A_armv8_architecture_extensions.fm" linkend="FEAT_AMUv1">FEAT_AMUv1</xref>, the number of architected activity monitor event counters is 4.</para></note><para>Possible values of each bit are:</para></field_description>
    <field_array_indexes index_variable="n" element_size="1" range_specifier="n">
      <field_array_index>
        <field_array_start>3</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>When read, means that <register_link id="amu.amevcntr0n.xml" state="">AMEVCNTR0&lt;n&gt;</register_link> is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>When read, means that <register_link id="amu.amevcntr0n.xml" state="">AMEVCNTR0&lt;n&gt;</register_link> is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="AMU">
        <field_reset_number>'0'</field_reset_number>
      </field_reset>
    </field_resets>
    <field_access>
      <field_access_state>
        <field_access_level>When n &gt;= 4</field_access_level>
        <field_access_type>RAZ/WI</field_access_type>
      </field_access_state>
      <field_access_state>
        <field_access_type>W1S</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_48" msb="63" lsb="48"/>
  <fieldat id="fieldset_0-47_32" label="P115" msb="47" lsb="47"/>
  <fieldat id="fieldset_0-47_32" label="P114" msb="46" lsb="46"/>
  <fieldat id="fieldset_0-47_32" label="P113" msb="45" lsb="45"/>
  <fieldat id="fieldset_0-47_32" label="P112" msb="44" lsb="44"/>
  <fieldat id="fieldset_0-47_32" label="P111" msb="43" lsb="43"/>
  <fieldat id="fieldset_0-47_32" label="P110" msb="42" lsb="42"/>
  <fieldat id="fieldset_0-47_32" label="P19" msb="41" lsb="41"/>
  <fieldat id="fieldset_0-47_32" label="P18" msb="40" lsb="40"/>
  <fieldat id="fieldset_0-47_32" label="P17" msb="39" lsb="39"/>
  <fieldat id="fieldset_0-47_32" label="P16" msb="38" lsb="38"/>
  <fieldat id="fieldset_0-47_32" label="P15" msb="37" lsb="37"/>
  <fieldat id="fieldset_0-47_32" label="P14" msb="36" lsb="36"/>
  <fieldat id="fieldset_0-47_32" label="P13" msb="35" lsb="35"/>
  <fieldat id="fieldset_0-47_32" label="P12" msb="34" lsb="34"/>
  <fieldat id="fieldset_0-47_32" label="P11" msb="33" lsb="33"/>
  <fieldat id="fieldset_0-47_32" label="P10" msb="32" lsb="32"/>
  <fieldat id="fieldset_0-31_16" msb="31" lsb="16"/>
  <fieldat id="fieldset_0-15_4" msb="15" lsb="4"/>
  <fieldat id="fieldset_0-3_0" label="P03" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-3_0" label="P02" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-3_0" label="P01" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-3_0" label="P00" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>If there are no auxiliary monitor event counters implemented, reads of AMCNTENSET[63:32] are RAZ. Software must treat reserved accesses as <arm-defined-word>RES0</arm-defined-word>. See <xref filename="I_requirements_for_memory__.fm" linkend="CEGBCACC">'Access requirements for reserved and unallocated registers'</xref>.</para>

      </access_permission_text>
      <access_permission_text>
        <note><para>There are no implemented auxiliary activity monitor event counters when <register_link id="amu.amcfgr.xml" state="">AMCFGR</register_link>.NCG == <binarynumber>0b0000</binarynumber>.</para></note>
      </access_permission_text>





    
        
        <access_mechanism type="BlockAccessAbstract" table_id="AMUacccessor0">
        
        
        
        
        <access_header>Accessible at offset <hexnumber>0xC00</hexnumber> from AMU</access_header>
    </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:53; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>