<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2025 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_stub_entry="False">
      <reg_short_name>EDDEVARCH</reg_short_name>
        
        <reg_long_name>External Debug Device Architecture Register</reg_long_name>

        <power_domain_text>When FEAT_DoPD is implemented, EDDEVARCH is in the Core power domain. Otherwise, EDDEVARCH is in the Debug power domain</power_domain_text>


      
          <reg_condition otherwise="RES0" verbatim="True"><para>Implementation of this register is <arm-defined-word>OPTIONAL</arm-defined-word>.</para></reg_condition>
      

    
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0xFBC</hexnumber></reg_offset>
    <reg_instance>EDDEVARCH</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_DoPD is implemented and !IsCorePowered()</reg_access_level>
          <reg_access_type>ERROR</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Identifies the programmers' model architecture of the external debug component.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Debug</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>EDDEVARCH is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_21" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ARCHITECT</field_name>
    <field_msb>31</field_msb>
    <field_lsb>21</field_lsb>
    <rel_range>31:21</rel_range>
    <field_description order="before"><para>Defines the architect of the component. For External Debug, this is Arm Limited.</para>
<para>Bits [31:28] are the JEP106 continuation code, <binarynumber>0b0100</binarynumber>.</para>
<para>Bits [27:21] are the JEP106 identification code, <binarynumber>0b0111011</binarynumber>.</para></field_description>
    <field_description order="after">
      <para>Reads as <binarynumber>0b01000111011</binarynumber>.</para>
    </field_description>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-20_20" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PRESENT</field_name>
    <field_msb>20</field_msb>
    <field_lsb>20</field_lsb>
    <rel_range>20</rel_range>
    <field_description order="before">
      <para>DEVARCH present. Indicates that the EDDEVARCH register is present.</para>
    </field_description>
    <field_description order="after">
      <para>Reads as <binarynumber>0b1</binarynumber>.</para>
    </field_description>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-19_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>REVISION</field_name>
    <field_msb>19</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>19:16</rel_range>
    <field_description order="before"><para>Defines the architecture revision. For architectures defined by Arm this is the minor revision.</para>
<para>For debug, the revision defined by Armv8 is <hexnumber>0x0</hexnumber>.</para>
<para>All other values are reserved.</para></field_description>
    <field_description order="after">
      <para>Reads as <binarynumber>0b0000</binarynumber>.</para>
    </field_description>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-15_12" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ARCHVER</field_name>
    <field_msb>15</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>15:12</rel_range>
    <field_description order="before">
      <para>Architecture Version. Defines the architecture version of the component.</para>
    </field_description>
    <field_description order="after"><para>EDDEVARCH.ARCHVER and EDDEVARCH.ARCHPART are also defined as a single field, EDDEVARCH.ARCHID, so that EDDEVARCH.ARCHVER is EDDEVARCH.ARCHID[15:12].</para>
<para><xref linkend="#FEAT_Debugv8p1">FEAT_Debugv8p1</xref> implements the functionality identified by the value <binarynumber>0b0111</binarynumber>.</para>
<para><xref linkend="#FEAT_Debugv8p2">FEAT_Debugv8p2</xref> implements the functionality identified by the value <binarynumber>0b1000</binarynumber>.</para>
<para><xref linkend="#FEAT_Debugv8p4">FEAT_Debugv8p4</xref> implements the functionality identified by the value <binarynumber>0b1001</binarynumber>.</para>
<para><xref linkend="#FEAT_Debugv8p8">FEAT_Debugv8p8</xref> implements the functionality identified by the value <binarynumber>0b1010</binarynumber>.</para>
<para><xref linkend="#FEAT_Debugv8p9">FEAT_Debugv8p9</xref> implements the functionality identified by the value <binarynumber>0b1011</binarynumber>.</para>
<para>From Armv8.1, when <xref linkend="#FEAT_Debugv8p1">FEAT_Debugv8p1</xref> is implemented the value <binarynumber>0b0110</binarynumber> is not permitted.</para>
<para>From Armv8.2, the values <binarynumber>0b0110</binarynumber> and <binarynumber>0b0111</binarynumber> are not permitted.</para>
<para>From Armv8.4, the value <binarynumber>0b1000</binarynumber> is not permitted.</para>
<para>From Armv8.8, the value <binarynumber>0b1001</binarynumber> is not permitted.</para>
<para>From Armv8.9, the value <binarynumber>0b1010</binarynumber> is not permitted.</para></field_description>
    <field_values impdef="True">
      <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
          <para>Armv8 debug architecture.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
          <para>Armv8.1 debug architecture, <xref linkend="#FEAT_Debugv8p1">FEAT_Debugv8p1</xref>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
          <para>Armv8.2 debug architecture, <xref linkend="#FEAT_Debugv8p2">FEAT_Debugv8p2</xref>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
          <para>Armv8.4 debug architecture, <xref linkend="#FEAT_Debugv8p4">FEAT_Debugv8p4</xref>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1010</field_value>
        <field_value_description>
          <para>Armv8.8 debug architecture, <xref linkend="#FEAT_Debugv8p8">FEAT_Debugv8p8</xref>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1011</field_value>
        <field_value_description>
          <para>Armv8.9 debug architecture, <xref linkend="#FEAT_Debugv8p9">FEAT_Debugv8p9</xref>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_0-11_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ARCHPART</field_name>
    <field_msb>11</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>11:0</rel_range>
    <field_description order="before">
      <para>Architecture Part. Defines the architecture of the component.</para>
    </field_description>
    <field_description order="after"><para>EDDEVARCH.ARCHVER and EDDEVARCH.ARCHPART are also defined as a single field, EDDEVARCH.ARCHID, so that EDDEVARCH.ARCHPART is EDDEVARCH.ARCHID[11:0].</para>
<para>Armv8-A debug architecture.</para></field_description>
    <field_values impdef="False">
      <field_value_instance>
        <field_value>0xA15</field_value>
        <field_value_description>
          <para>Armv8-A debug architecture.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_21" msb="31" lsb="21"/>
  <fieldat id="fieldset_0-20_20" msb="20" lsb="20"/>
  <fieldat id="fieldset_0-19_16" msb="19" lsb="16"/>
  <fieldat id="fieldset_0-15_12" msb="15" lsb="12"/>
  <fieldat id="fieldset_0-11_0" msb="11" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






    

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>21/03/2025 17:53; 154105dd5041532b480d9ef0c018b8420cbe5c19</timestamp>
</register_page>